Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to game.o(.text.init_game) for init_game
    main.o(.text.main) refers to uart.o(.text.uart0_init) for uart0_init
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.input_queue) for input_queue
    main.o(.text.main) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    main.o(.text.main) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.main) refers to main.o(.text.vTimerCallbackFunction) for vTimerCallbackFunction
    main.o(.text.main) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    main.o(.text.main) refers to main.o(.bss.timer) for timer
    main.o(.text.main) refers to main.o(.bss.printTaskHandle) for printTaskHandle
    main.o(.text.main) refers to main.o(.text.vTaskScreenPrint) for vTaskScreenPrint
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.vProcessTask) for vProcessTask
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.vTimerCallbackFunction) refers to main.o(.bss.timer_ticks) for timer_ticks
    main.o(.text.vTimerCallbackFunction) refers to main.o(.data.max_time) for max_time
    main.o(.text.vTimerCallbackFunction) refers to game.o(.text.xor_shift) for xor_shift
    main.o(.text.vTimerCallbackFunction) refers to game.o(.bss.special_power_up_location) for special_power_up_location
    main.o(.text.vTimerCallbackFunction) refers to game.o(.data.state_of_game) for state_of_game
    main.o(.ARM.exidx.text.vTimerCallbackFunction) refers to main.o(.text.vTimerCallbackFunction) for [Anonymous Symbol]
    main.o(.text.vTaskScreenPrint) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.vTaskScreenPrint) refers to game.o(.data.state_of_game) for state_of_game
    main.o(.text.vTaskScreenPrint) refers to main.o(.data.print_task_delay) for print_task_delay
    main.o(.text.vTaskScreenPrint) refers to game.o(.data.target_score) for target_score
    main.o(.text.vTaskScreenPrint) refers to game.o(.bss.current_score) for current_score
    main.o(.text.vTaskScreenPrint) refers to game.o(.bss.highest_score) for highest_score
    main.o(.text.vTaskScreenPrint) refers to main.o(.data.max_time) for max_time
    main.o(.text.vTaskScreenPrint) refers to game.o(.data.obstacle_count) for obstacle_count
    main.o(.text.vTaskScreenPrint) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.vTaskScreenPrint) refers to game.o(.text.initalize_screen) for initalize_screen
    main.o(.text.vTaskScreenPrint) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.vTaskScreenPrint) refers to game.o(.text.draw_snake) for draw_snake
    main.o(.text.vTaskScreenPrint) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.vTaskScreenPrint) refers to game.o(.text.draw_fruits) for draw_fruits
    main.o(.text.vTaskScreenPrint) refers to game.o(.text.draw_obstacle) for draw_obstacle
    main.o(.text.vTaskScreenPrint) refers to uart.o(.text.print) for print
    main.o(.text.vTaskScreenPrint) refers to game.o(.text.draw_screen) for draw_screen
    main.o(.text.vTaskScreenPrint) refers to uart.o(.text.print_idec) for print_idec
    main.o(.text.vTaskScreenPrint) refers to main.o(.rodata.str1.1) for .L.str.11
    main.o(.text.vTaskScreenPrint) refers to main.o(.data.process_task_delay) for process_task_delay
    main.o(.text.vTaskScreenPrint) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    main.o(.ARM.exidx.text.vTaskScreenPrint) refers to main.o(.text.vTaskScreenPrint) for [Anonymous Symbol]
    main.o(.text.vProcessTask) refers to main.o(.bss.input_queue) for input_queue
    main.o(.text.vProcessTask) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.vProcessTask) refers to game.o(.data.currentDirection) for currentDirection
    main.o(.text.vProcessTask) refers to main.o(.data.process_task_delay) for process_task_delay
    main.o(.text.vProcessTask) refers to main.o(.bss.timer) for timer
    main.o(.text.vProcessTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.vProcessTask) refers to game.o(.text.processInput) for processInput
    main.o(.text.vProcessTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.vProcessTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.vProcessTask) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    main.o(.text.vProcessTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.vProcessTask) refers to game.o(.text.init_game) for init_game
    main.o(.text.vProcessTask) refers to game.o(.text.update_obstacle_pos) for update_obstacle_pos
    main.o(.text.vProcessTask) refers to game.o(.data.state_of_game) for state_of_game
    main.o(.text.vProcessTask) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    main.o(.text.vProcessTask) refers to main.o(.bss.timer_ticks) for timer_ticks
    main.o(.text.vProcessTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.vProcessTask) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    main.o(.text.vProcessTask) refers to main.o(.bss.printTaskHandle) for printTaskHandle
    main.o(.text.vProcessTask) refers to tasks.o(.text.vTaskResume) for vTaskResume
    main.o(.ARM.exidx.text.vProcessTask) refers to main.o(.text.vProcessTask) for [Anonymous Symbol]
    main.o(.text.UART0_Handler) refers to main.o(.bss.UART0_Handler.received_char) for UART0_Handler.received_char
    main.o(.text.UART0_Handler) refers to main.o(.bss.input_queue) for input_queue
    main.o(.text.UART0_Handler) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    main.o(.ARM.exidx.text.UART0_Handler) refers to main.o(.text.UART0_Handler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationMallocFailedHook) refers to main.o(.text.vApplicationMallocFailedHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to main.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationIdleHook) refers to main.o(.text.vApplicationIdleHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationTickHook) refers to main.o(.text.vApplicationTickHook) for [Anonymous Symbol]
    uart.o(.text.uart0_init) refers to dfltui.o(.text) for __aeabi_ui2d
    uart.o(.text.uart0_init) refers to dmul.o(.text) for __aeabi_dmul
    uart.o(.text.uart0_init) refers to ddiv.o(.text) for __aeabi_ddiv
    uart.o(.text.uart0_init) refers to d2f.o(.text) for __aeabi_d2f
    uart.o(.text.uart0_init) refers to f2d.o(.text) for __aeabi_f2d
    uart.o(.text.uart0_init) refers to dadd.o(.text) for __aeabi_dadd
    uart.o(.text.uart0_init) refers to dfixi.o(.text) for __aeabi_d2iz
    uart.o(.ARM.exidx.text.uart0_init) refers to uart.o(.text.uart0_init) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.uart0_putchar) refers to uart.o(.text.uart0_putchar) for [Anonymous Symbol]
    uart.o(.text.print) refers to uart.o(.text.uart0_putchar) for uart0_putchar
    uart.o(.ARM.exidx.text.print) refers to uart.o(.text.print) for [Anonymous Symbol]
    uart.o(.text.print_idec) refers to uart.o(.text.itoa) for itoa
    uart.o(.text.print_idec) refers to uart.o(.text.print) for print
    uart.o(.ARM.exidx.text.print_idec) refers to uart.o(.text.print_idec) for [Anonymous Symbol]
    uart.o(.text.itoa) refers to uart.o(.text.reverse) for reverse
    uart.o(.ARM.exidx.text.itoa) refers to uart.o(.text.itoa) for [Anonymous Symbol]
    uart.o(.text.print_ihex) refers to uart.o(.text.itoa) for itoa
    uart.o(.text.print_ihex) refers to uart.o(.text.print) for print
    uart.o(.text.print_ihex) refers to uart.o(.text.uart0_putchar) for uart0_putchar
    uart.o(.ARM.exidx.text.print_ihex) refers to uart.o(.text.print_ihex) for [Anonymous Symbol]
    uart.o(.text.print_ibin) refers to uart.o(.text.itoa) for itoa
    uart.o(.text.print_ibin) refers to uart.o(.text.print) for print
    uart.o(.text.print_ibin) refers to uart.o(.text.uart0_putchar) for uart0_putchar
    uart.o(.ARM.exidx.text.print_ibin) refers to uart.o(.text.print_ibin) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.reverse) refers to uart.o(.text.reverse) for [Anonymous Symbol]
    game.o(.text.initalize_screen) refers to game.o(.bss.screen) for screen
    game.o(.ARM.exidx.text.initalize_screen) refers to game.o(.text.initalize_screen) for [Anonymous Symbol]
    game.o(.text.draw_obstacle) refers to game.o(.data.obstacle_count) for obstacle_count
    game.o(.text.draw_obstacle) refers to game.o(.bss.obstacles) for obstacles
    game.o(.text.draw_obstacle) refers to game.o(.bss.screen) for screen
    game.o(.ARM.exidx.text.draw_obstacle) refers to game.o(.text.draw_obstacle) for [Anonymous Symbol]
    game.o(.text.draw_snake) refers to game.o(.bss.snake) for snake
    game.o(.text.draw_snake) refers to game.o(.bss.screen) for screen
    game.o(.ARM.exidx.text.draw_snake) refers to game.o(.text.draw_snake) for [Anonymous Symbol]
    game.o(.text.draw_fruits) refers to game.o(.bss.fruit_location) for fruit_location
    game.o(.text.draw_fruits) refers to game.o(.bss.screen) for screen
    game.o(.text.draw_fruits) refers to game.o(.bss.special_power_up_location) for special_power_up_location
    game.o(.ARM.exidx.text.draw_fruits) refers to game.o(.text.draw_fruits) for [Anonymous Symbol]
    game.o(.text.draw_screen) refers to game.o(.bss.screen) for screen
    game.o(.text.draw_screen) refers to uart.o(.text.uart0_putchar) for uart0_putchar
    game.o(.text.draw_screen) refers to uart.o(.text.print) for print
    game.o(.ARM.exidx.text.draw_screen) refers to game.o(.text.draw_screen) for [Anonymous Symbol]
    game.o(.text.processInput) refers to game.o(.text.detect_collision) for detect_collision
    game.o(.text.processInput) refers to game.o(.text.check_if_fruit_taken) for check_if_fruit_taken
    game.o(.text.processInput) refers to game.o(.text.check_if_special_fruit_taken) for check_if_special_fruit_taken
    game.o(.text.processInput) refers to game.o(.text.update_snake_normal) for update_snake_normal
    game.o(.text.processInput) refers to game.o(.data.currentDirection) for currentDirection
    game.o(.text.processInput) refers to game.o(.data.state_of_game) for state_of_game
    game.o(.ARM.exidx.text.processInput) refers to game.o(.text.processInput) for [Anonymous Symbol]
    game.o(.text.detect_collision) refers to game.o(.bss.snake) for snake
    game.o(.text.detect_collision) refers to game.o(.data.obstacle_count) for obstacle_count
    game.o(.text.detect_collision) refers to game.o(.bss.obstacles) for obstacles
    game.o(.ARM.exidx.text.detect_collision) refers to game.o(.text.detect_collision) for [Anonymous Symbol]
    game.o(.text.check_if_fruit_taken) refers to game.o(.text.snake_took_fruit) for snake_took_fruit
    game.o(.text.check_if_fruit_taken) refers to game.o(.bss.current_score) for current_score
    game.o(.text.check_if_fruit_taken) refers to game.o(.data.target_score) for target_score
    game.o(.text.check_if_fruit_taken) refers to game.o(.data.state_of_game) for state_of_game
    game.o(.text.check_if_fruit_taken) refers to game.o(.bss.fruit_location) for fruit_location
    game.o(.text.check_if_fruit_taken) refers to game.o(.text.update_snake_pos_fruit) for update_snake_pos_fruit
    game.o(.text.check_if_fruit_taken) refers to game.o(.text.update_fruit_location) for update_fruit_location
    game.o(.ARM.exidx.text.check_if_fruit_taken) refers to game.o(.text.check_if_fruit_taken) for [Anonymous Symbol]
    game.o(.text.check_if_special_fruit_taken) refers to game.o(.text.snake_took_special_fruit) for snake_took_special_fruit
    game.o(.text.check_if_special_fruit_taken) refers to game.o(.bss.current_score) for current_score
    game.o(.text.check_if_special_fruit_taken) refers to game.o(.data.target_score) for target_score
    game.o(.text.check_if_special_fruit_taken) refers to game.o(.data.state_of_game) for state_of_game
    game.o(.text.check_if_special_fruit_taken) refers to game.o(.bss.special_power_up_location) for special_power_up_location
    game.o(.text.check_if_special_fruit_taken) refers to game.o(.text.update_snake_pos_special_fruit) for update_snake_pos_special_fruit
    game.o(.text.check_if_special_fruit_taken) refers to game.o(.text.update_special_fruit_pos) for update_special_fruit_pos
    game.o(.ARM.exidx.text.check_if_special_fruit_taken) refers to game.o(.text.check_if_special_fruit_taken) for [Anonymous Symbol]
    game.o(.text.update_snake_normal) refers to game.o(.bss.snake) for snake
    game.o(.ARM.exidx.text.update_snake_normal) refers to game.o(.text.update_snake_normal) for [Anonymous Symbol]
    game.o(.text.snake_took_special_fruit) refers to game.o(.bss.snake) for snake
    game.o(.text.snake_took_special_fruit) refers to game.o(.bss.special_power_up_location) for special_power_up_location
    game.o(.ARM.exidx.text.snake_took_special_fruit) refers to game.o(.text.snake_took_special_fruit) for [Anonymous Symbol]
    game.o(.text.snake_took_fruit) refers to game.o(.bss.snake) for snake
    game.o(.text.snake_took_fruit) refers to game.o(.bss.fruit_location) for fruit_location
    game.o(.ARM.exidx.text.snake_took_fruit) refers to game.o(.text.snake_took_fruit) for [Anonymous Symbol]
    game.o(.text.update_special_fruit_pos) refers to game.o(.bss.special_power_up_location) for special_power_up_location
    game.o(.ARM.exidx.text.update_special_fruit_pos) refers to game.o(.text.update_special_fruit_pos) for [Anonymous Symbol]
    game.o(.text.update_snake_pos_fruit) refers to game.o(.bss.snake) for snake
    game.o(.ARM.exidx.text.update_snake_pos_fruit) refers to game.o(.text.update_snake_pos_fruit) for [Anonymous Symbol]
    game.o(.text.update_snake_pos_special_fruit) refers to game.o(.bss.snake) for snake
    game.o(.text.update_snake_pos_special_fruit) refers to game.o(.data.currentDirection) for currentDirection
    game.o(.ARM.exidx.text.update_snake_pos_special_fruit) refers to game.o(.text.update_snake_pos_special_fruit) for [Anonymous Symbol]
    game.o(.text.update_fruit_location) refers to game.o(.text.xor_shift) for xor_shift
    game.o(.text.update_fruit_location) refers to game.o(.bss.fruit_location) for fruit_location
    game.o(.ARM.exidx.text.update_fruit_location) refers to game.o(.text.update_fruit_location) for [Anonymous Symbol]
    game.o(.text.xor_shift) refers to game.o(.data.current_state) for current_state
    game.o(.ARM.exidx.text.xor_shift) refers to game.o(.text.xor_shift) for [Anonymous Symbol]
    game.o(.text.update_obstacle_pos) refers to game.o(.data.obstacle_count) for obstacle_count
    game.o(.text.update_obstacle_pos) refers to game.o(.bss.obstacles) for obstacles
    game.o(.text.update_obstacle_pos) refers to game.o(.text.xor_shift) for xor_shift
    game.o(.ARM.exidx.text.update_obstacle_pos) refers to game.o(.text.update_obstacle_pos) for [Anonymous Symbol]
    game.o(.text.init_game) refers to game.o(.bss.current_score) for current_score
    game.o(.text.init_game) refers to game.o(.bss.snake) for snake
    game.o(.text.init_game) refers to game.o(.bss.fruit_location) for fruit_location
    game.o(.text.init_game) refers to game.o(.bss.special_power_up_location) for special_power_up_location
    game.o(.ARM.exidx.text.init_game) refers to game.o(.text.init_game) for [Anonymous Symbol]
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(RESET) refers to main.o(.text.UART0_Handler) for UART0_Handler
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.text.getOscClk) refers to system_tm4c123.o(.rodata..Lswitch.table.getOscClk) for .Lswitch.table.getOscClk
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to memseta.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers to fepilogue.o(.text) for _float_round
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_tm4c123.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_tm4c123.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    fepilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.vTimerCallbackFunction), (8 bytes).
    Removing main.o(.ARM.exidx.text.vTaskScreenPrint), (8 bytes).
    Removing main.o(.ARM.exidx.text.vProcessTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.UART0_Handler), (8 bytes).
    Removing main.o(.text.vApplicationMallocFailedHook), (2 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationMallocFailedHook), (8 bytes).
    Removing main.o(.text.vApplicationStackOverflowHook), (2 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing main.o(.text.vApplicationIdleHook), (2 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationIdleHook), (8 bytes).
    Removing main.o(.text.vApplicationTickHook), (2 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationTickHook), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.ARM.exidx.text.uart0_init), (8 bytes).
    Removing uart.o(.ARM.exidx.text.uart0_putchar), (8 bytes).
    Removing uart.o(.ARM.exidx.text.print), (8 bytes).
    Removing uart.o(.ARM.exidx.text.print_idec), (8 bytes).
    Removing uart.o(.ARM.exidx.text.itoa), (8 bytes).
    Removing uart.o(.text.print_ihex), (60 bytes).
    Removing uart.o(.ARM.exidx.text.print_ihex), (8 bytes).
    Removing uart.o(.text.print_ibin), (64 bytes).
    Removing uart.o(.ARM.exidx.text.print_ibin), (8 bytes).
    Removing uart.o(.ARM.exidx.text.reverse), (8 bytes).
    Removing game.o(.text), (0 bytes).
    Removing game.o(.ARM.exidx.text.initalize_screen), (8 bytes).
    Removing game.o(.ARM.exidx.text.draw_obstacle), (8 bytes).
    Removing game.o(.ARM.exidx.text.draw_snake), (8 bytes).
    Removing game.o(.ARM.exidx.text.draw_fruits), (8 bytes).
    Removing game.o(.ARM.exidx.text.draw_screen), (8 bytes).
    Removing game.o(.ARM.exidx.text.processInput), (8 bytes).
    Removing game.o(.ARM.exidx.text.detect_collision), (8 bytes).
    Removing game.o(.ARM.exidx.text.check_if_fruit_taken), (8 bytes).
    Removing game.o(.ARM.exidx.text.check_if_special_fruit_taken), (8 bytes).
    Removing game.o(.ARM.exidx.text.update_snake_normal), (8 bytes).
    Removing game.o(.ARM.exidx.text.snake_took_special_fruit), (8 bytes).
    Removing game.o(.ARM.exidx.text.snake_took_fruit), (8 bytes).
    Removing game.o(.ARM.exidx.text.update_special_fruit_pos), (8 bytes).
    Removing game.o(.ARM.exidx.text.update_snake_pos_fruit), (8 bytes).
    Removing game.o(.ARM.exidx.text.update_snake_pos_special_fruit), (8 bytes).
    Removing game.o(.ARM.exidx.text.update_fruit_location), (8 bytes).
    Removing game.o(.ARM.exidx.text.xor_shift), (8 bytes).
    Removing game.o(.ARM.exidx.text.update_obstacle_pos), (8 bytes).
    Removing game.o(.ARM.exidx.text.init_game), (8 bytes).
    Removing startup_tm4c123.o(HEAP), (0 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (132 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (56 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_tm4c123.o(.rodata..Lswitch.table.getOscClk), (92 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (38 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (142 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (50 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (248 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (376 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (196 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (132 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (30 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (42 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (246 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (190 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (246 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (208 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (168 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.prvSearchForNameWithinSingleList), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (192 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (100 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (182 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (138 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (234 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (58 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (126 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (22 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (22 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (150 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (194 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (360 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (402 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (66 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (34 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (46 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (26 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (46 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (70 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).

300 unused section(s) (total 8494 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/d2f.c                  0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/microlib/f2d.c                  0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    RTE\Device\TM4C123GH6PM\startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    game.c                                   0x00000000   Number         0  game.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    .ARM.Collect$$$$00000000                 0x0000026c   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x0000026c   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000270   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000274   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000274   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000274   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x0000027c   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x0000027c   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x0000027c   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x0000027c   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    $v0                                      0x00000280   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000280   Section      252  startup_tm4c123.o(.text)
    .text                                    0x0000037c   Section        0  memcpya.o(.text)
    .text                                    0x000003a0   Section        0  memseta.o(.text)
    .text                                    0x000003c4   Section        0  dadd.o(.text)
    .text                                    0x00000512   Section        0  dmul.o(.text)
    .text                                    0x000005f6   Section        0  ddiv.o(.text)
    .text                                    0x000006d4   Section        0  dfltui.o(.text)
    .text                                    0x000006ee   Section        0  dfixi.o(.text)
    .text                                    0x0000072c   Section        0  f2d.o(.text)
    .text                                    0x00000752   Section        0  d2f.o(.text)
    .text                                    0x0000078a   Section        0  llshl.o(.text)
    .text                                    0x000007a8   Section        0  llushr.o(.text)
    .text                                    0x000007c8   Section        0  llsshr.o(.text)
    .text                                    0x000007ec   Section        0  iusefp.o(.text)
    .text                                    0x000007ec   Section        0  fepilogue.o(.text)
    .text                                    0x0000085a   Section        0  depilogue.o(.text)
    .text                                    0x00000914   Section       36  init.o(.text)
    [Anonymous Symbol]                       0x00000940   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x000009a0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x000009b0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x000009d0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x000009d4   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000a04   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000a18   Section        0  main.o(.text.UART0_Handler)
    [Anonymous Symbol]                       0x00000a54   Section        0  game.o(.text.check_if_fruit_taken)
    [Anonymous Symbol]                       0x00000aa4   Section        0  game.o(.text.check_if_special_fruit_taken)
    [Anonymous Symbol]                       0x00000af4   Section        0  game.o(.text.detect_collision)
    [Anonymous Symbol]                       0x00000ba0   Section        0  game.o(.text.draw_fruits)
    [Anonymous Symbol]                       0x00000bd4   Section        0  game.o(.text.draw_obstacle)
    [Anonymous Symbol]                       0x00000c1c   Section        0  game.o(.text.draw_screen)
    [Anonymous Symbol]                       0x00000c58   Section        0  game.o(.text.draw_snake)
    [Anonymous Symbol]                       0x00000c9c   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x00000ce4   Section        0  game.o(.text.init_game)
    [Anonymous Symbol]                       0x00000d24   Section        0  game.o(.text.initalize_screen)
    itoa                                     0x00000d6d   Thumb Code   110  uart.o(.text.itoa)
    [Anonymous Symbol]                       0x00000d6c   Section        0  uart.o(.text.itoa)
    [Anonymous Symbol]                       0x00000ddc   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x00000ea4   Section        0  uart.o(.text.print)
    [Anonymous Symbol]                       0x00000ec8   Section        0  uart.o(.text.print_idec)
    [Anonymous Symbol]                       0x00000ee4   Section        0  game.o(.text.processInput)
    prvAddCurrentTaskToDelayedList           0x00001031   Thumb Code   198  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00001030   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x000010f9   Thumb Code   206  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x000010f8   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x000011c9   Thumb Code    90  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x000011c8   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x00001225   Thumb Code    78  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00001224   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00001275   Thumb Code    38  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00001274   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x0000129d   Thumb Code   122  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x0000129c   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x00001319   Thumb Code    18  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x00001318   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x0000132d   Thumb Code    18  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x0000132c   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetExpectedIdleTime                   0x00001341   Thumb Code    68  tasks.o(.text.prvGetExpectedIdleTime)
    [Anonymous Symbol]                       0x00001340   Section        0  tasks.o(.text.prvGetExpectedIdleTime)
    prvGetNextExpireTime                     0x00001385   Thumb Code    32  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x00001384   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x000013a5   Thumb Code   118  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x000013a4   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x0000141d   Thumb Code   114  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x0000141c   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x00001491   Thumb Code    32  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x00001490   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x000014b1   Thumb Code    36  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x000014b0   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x000014d5   Thumb Code   170  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x000014d4   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseNewTimer                    0x00001581   Thumb Code    82  timers.o(.text.prvInitialiseNewTimer)
    [Anonymous Symbol]                       0x00001580   Section        0  timers.o(.text.prvInitialiseNewTimer)
    prvInitialiseTaskLists                   0x000015d5   Thumb Code   110  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x000015d4   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x00001645   Thumb Code    90  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x00001644   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x000016a1   Thumb Code    64  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x000016a0   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x000016e1   Thumb Code    24  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x000016e0   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x000016f9   Thumb Code    28  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x000016f8   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x00001715   Thumb Code   142  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x00001714   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x000017a5   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x000017a4   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x000017cd   Thumb Code    62  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x000017cc   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x0000180d   Thumb Code   274  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x0000180c   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x00001921   Thumb Code   128  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x00001920   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x000019a1   Thumb Code    58  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x000019a0   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x000019dd   Thumb Code    38  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x000019dc   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x00001a05   Thumb Code    42  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x00001a04   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x00001a31   Thumb Code    52  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x00001a30   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x00001a65   Thumb Code    50  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00001a64   Section        0  port.o(.text.prvTaskExitError)
    prvTaskIsTaskSuspended                   0x00001a99   Thumb Code    50  tasks.o(.text.prvTaskIsTaskSuspended)
    [Anonymous Symbol]                       0x00001a98   Section        0  tasks.o(.text.prvTaskIsTaskSuspended)
    prvTimerTask                             0x00001acd   Thumb Code    22  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00001acc   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00001ae5   Thumb Code   134  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001ae4   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001b6c   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00001cbc   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00001cd4   Section        0  port.o(.text.pxPortInitialiseStack)
    reverse                                  0x00001cfd   Thumb Code    52  uart.o(.text.reverse)
    [Anonymous Symbol]                       0x00001cfc   Section        0  uart.o(.text.reverse)
    [Anonymous Symbol]                       0x00001d30   Section        0  game.o(.text.snake_took_fruit)
    [Anonymous Symbol]                       0x00001d70   Section        0  game.o(.text.snake_took_special_fruit)
    [Anonymous Symbol]                       0x00001db0   Section        0  uart.o(.text.uart0_init)
    [Anonymous Symbol]                       0x00001ee4   Section        0  uart.o(.text.uart0_putchar)
    [Anonymous Symbol]                       0x00001f00   Section        0  game.o(.text.update_fruit_location)
    [Anonymous Symbol]                       0x00001f34   Section        0  game.o(.text.update_obstacle_pos)
    [Anonymous Symbol]                       0x00001f94   Section        0  game.o(.text.update_snake_normal)
    [Anonymous Symbol]                       0x00001fe0   Section        0  game.o(.text.update_snake_pos_fruit)
    [Anonymous Symbol]                       0x00002004   Section        0  game.o(.text.update_snake_pos_special_fruit)
    [Anonymous Symbol]                       0x00002080   Section        0  game.o(.text.update_special_fruit_pos)
    [Anonymous Symbol]                       0x00002094   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x000020b8   Section        0  queue.o(.text.uxQueueMessagesWaiting)
    [Anonymous Symbol]                       0x000020e0   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x000020f8   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00002100   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x0000213c   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x00002159   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00002158   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x0000216c   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x000021b4   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x000021e4   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00002270   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x000022d4   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x000023e8   Section        0  port.o(.text.vPortValidateInterruptPriority)
    [Anonymous Symbol]                       0x0000244c   Section        0  main.o(.text.vProcessTask)
    [Anonymous Symbol]                       0x000025b4   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x000025f8   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x0000264c   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00002668   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00002678   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x000026ac   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x0000271c   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x000027ec   Section        0  tasks.o(.text.vTaskResume)
    [Anonymous Symbol]                       0x00002898   Section        0  main.o(.text.vTaskScreenPrint)
    [Anonymous Symbol]                       0x00002aec   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00002b88   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x00002bc0   Section        0  tasks.o(.text.vTaskSuspend)
    [Anonymous Symbol]                       0x00002cb8   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00002cc8   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002cc8   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002d50   Section        0  main.o(.text.vTimerCallbackFunction)
    [Anonymous Symbol]                       0x00002dd0   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00002ee4   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00002efc   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00002f50   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00003004   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x000031d4   Section        0  queue.o(.text.xQueueGenericSendFromISR)
    [Anonymous Symbol]                       0x00003308   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x0000348c   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x00003654   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x000036fc   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x0000375c   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00003784   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x00003790   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x0000393c   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00003a00   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00003ac0   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00003bb8   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00003d24   Section        0  timers.o(.text.xTimerCreate)
    [Anonymous Symbol]                       0x00003d5c   Section        0  timers.o(.text.xTimerCreateTimerTask)
    [Anonymous Symbol]                       0x00003dbc   Section        0  timers.o(.text.xTimerGenericCommand)
    [Anonymous Symbol]                       0x00003e24   Section        0  game.o(.text.xor_shift)
    i.__scatterload_copy                     0x00003e3e   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00003e4c   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00003e4e   Section       14  handlers.o(i.__scatterload_zeroinit)
    .L.str.3                                 0x00003e5c   Data          18  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003e5c   Section        0  main.o(.rodata.str1.1)
    .L.str.6                                 0x00003e6e   Data          48  main.o(.rodata.str1.1)
    .L.str.8                                 0x00003e9e   Data          28  main.o(.rodata.str1.1)
    .L.str.5                                 0x00003eba   Data          39  main.o(.rodata.str1.1)
    .L.str.7                                 0x00003ee1   Data          95  main.o(.rodata.str1.1)
    .L.str.11                                0x00003f3d   Data           3  main.o(.rodata.str1.1)
    .L.str.4                                 0x00003f40   Data          12  main.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000014   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000014   Section        0  port.o(.data.uxCriticalNesting)
    UART0_Handler.received_char              0x20000018   Data           1  main.o(.bss.UART0_Handler.received_char)
    [Anonymous Symbol]                       0x20000018   Section        0  main.o(.bss.UART0_Handler.received_char)
    prvSampleTimeNow.xLastTime               0x2000003c   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x2000003c   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pxCurrentTimerList                       0x20000044   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000044   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20000048   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000048   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x2000004c   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x2000004c   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000050   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000050   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000054   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000054   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20000058   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000058   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000500   Data       16384  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000500   Section        0  heap_4.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20004500   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20004500   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x20004504   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x20004504   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x20004508   Data           1  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x20004508   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x2000450c   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x2000450c   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x20004510   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20004510   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20004514   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20004514   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20004518   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20004518   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x2000451c   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x2000451c   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20004520   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20004520   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20004524   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20004524   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20004538   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20004538   Section        0  timers.o(.bss.xActiveTimerList2)
    xBlockAllocatedBit                       0x2000454c   Data           1  heap_4.o(.bss.xBlockAllocatedBit)
    [Anonymous Symbol]                       0x2000454c   Section        0  heap_4.o(.bss.xBlockAllocatedBit)
    xDelayedTaskList1                        0x20004550   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20004550   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20004564   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20004564   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20004578   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20004578   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x2000457c   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x2000457c   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x20004580   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x20004580   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xMinimumEverFreeBytesRemaining           0x20004584   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20004584   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x2000458c   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x2000458c   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20004590   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20004590   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20004594   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20004594   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20004598   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20004598   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x2000459c   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x2000459c   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x200045a0   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x200045a0   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x200045b4   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x200045b4   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x200045b8   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x200045b8   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x200045c0   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x200045c0   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x200045d4   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x200045d4   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x200045e8   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x200045e8   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x200045ec   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x200045ec   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x200045f0   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x200045f0   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x200045f4   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x200045f4   Section        0  tasks.o(.bss.xYieldPending)
    STACK                                    0x200045f8   Section      512  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x0000026d   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000271   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000275   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000275   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000275   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000275   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x0000027d   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x0000027d   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000281   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000289   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000028b   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x0000028d   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x0000028f   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000291   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000295   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x0000029b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x0000029d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x0000029f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x000002a1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x000002a3   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x000002a7   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x000002a9   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x000002ab   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x000002ad   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x000002af   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x000002b1   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x000002b3   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x000002b5   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x000002b7   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x000002b9   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x000002bb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x000002bd   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x000002bf   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x000002c1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x000002c3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x000002c5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x000002c7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x000002c9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x000002cb   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x000002cd   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x000002cf   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x000002d1   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x000002d3   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x000002d5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x000002d7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x000002d9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x000002db   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x000002dd   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x000002df   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x000002e1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x000002e3   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x000002e5   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x000002e7   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x000002e9   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x000002eb   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000002ed   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000002ef   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000002f1   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000002f3   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000002f5   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000002f7   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000002f9   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000002fb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000002fd   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000002ff   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x00000301   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x00000303   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x00000305   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x00000307   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x00000309   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x0000030b   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x0000030d   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x0000030f   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x00000311   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x00000313   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x00000315   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x00000317   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x00000319   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x0000031b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x0000031f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x00000323   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x00000325   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x00000327   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x0000032b   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x0000032d   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x0000037d   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x0000037d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x0000037d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000003a1   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000003a1   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000003a1   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000003af   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000003af   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000003af   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000003b3   Thumb Code    18  memseta.o(.text)
    __aeabi_dadd                             0x000003c5   Thumb Code   322  dadd.o(.text)
    __aeabi_dsub                             0x00000507   Thumb Code     6  dadd.o(.text)
    __aeabi_drsub                            0x0000050d   Thumb Code     6  dadd.o(.text)
    __aeabi_dmul                             0x00000513   Thumb Code   228  dmul.o(.text)
    __aeabi_ddiv                             0x000005f7   Thumb Code   222  ddiv.o(.text)
    __aeabi_ui2d                             0x000006d5   Thumb Code    26  dfltui.o(.text)
    __aeabi_d2iz                             0x000006ef   Thumb Code    62  dfixi.o(.text)
    __aeabi_f2d                              0x0000072d   Thumb Code    38  f2d.o(.text)
    __aeabi_d2f                              0x00000753   Thumb Code    56  d2f.o(.text)
    __aeabi_llsl                             0x0000078b   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x0000078b   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x000007a9   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x000007a9   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x000007c9   Thumb Code    36  llsshr.o(.text)
    _ll_sshift_r                             0x000007c9   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x000007ed   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x000007ed   Thumb Code    18  fepilogue.o(.text)
    _float_epilogue                          0x000007ff   Thumb Code    92  fepilogue.o(.text)
    _double_round                            0x0000085b   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x00000879   Thumb Code   156  depilogue.o(.text)
    __scatterload                            0x00000915   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000915   Thumb Code     0  init.o(.text)
    PendSV_Handler                           0x00000941   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x000009b1   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x000009d5   Thumb Code    46  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000a05   Thumb Code    18  system_tm4c123.o(.text.SystemInit)
    UART0_Handler                            0x00000a19   Thumb Code    60  main.o(.text.UART0_Handler)
    check_if_fruit_taken                     0x00000a55   Thumb Code    78  game.o(.text.check_if_fruit_taken)
    check_if_special_fruit_taken             0x00000aa5   Thumb Code    80  game.o(.text.check_if_special_fruit_taken)
    detect_collision                         0x00000af5   Thumb Code   170  game.o(.text.detect_collision)
    draw_fruits                              0x00000ba1   Thumb Code    52  game.o(.text.draw_fruits)
    draw_obstacle                            0x00000bd5   Thumb Code    70  game.o(.text.draw_obstacle)
    draw_screen                              0x00000c1d   Thumb Code    56  game.o(.text.draw_screen)
    draw_snake                               0x00000c59   Thumb Code    66  game.o(.text.draw_snake)
    eTaskConfirmSleepModeStatus              0x00000c9d   Thumb Code    72  tasks.o(.text.eTaskConfirmSleepModeStatus)
    init_game                                0x00000ce5   Thumb Code    64  game.o(.text.init_game)
    initalize_screen                         0x00000d25   Thumb Code    70  game.o(.text.initalize_screen)
    main                                     0x00000ddd   Thumb Code   160  main.o(.text.main)
    print                                    0x00000ea5   Thumb Code    36  uart.o(.text.print)
    print_idec                               0x00000ec9   Thumb Code    28  uart.o(.text.print_idec)
    processInput                             0x00000ee5   Thumb Code   332  game.o(.text.processInput)
    pvPortMalloc                             0x00001b6d   Thumb Code   334  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00001cbd   Thumb Code    24  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00001cd5   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    snake_took_fruit                         0x00001d31   Thumb Code    64  game.o(.text.snake_took_fruit)
    snake_took_special_fruit                 0x00001d71   Thumb Code    64  game.o(.text.snake_took_special_fruit)
    uart0_init                               0x00001db1   Thumb Code   308  uart.o(.text.uart0_init)
    uart0_putchar                            0x00001ee5   Thumb Code    26  uart.o(.text.uart0_putchar)
    update_fruit_location                    0x00001f01   Thumb Code    52  game.o(.text.update_fruit_location)
    update_obstacle_pos                      0x00001f35   Thumb Code    96  game.o(.text.update_obstacle_pos)
    update_snake_normal                      0x00001f95   Thumb Code    76  game.o(.text.update_snake_normal)
    update_snake_pos_fruit                   0x00001fe1   Thumb Code    34  game.o(.text.update_snake_pos_fruit)
    update_snake_pos_special_fruit           0x00002005   Thumb Code   122  game.o(.text.update_snake_pos_special_fruit)
    update_special_fruit_pos                 0x00002081   Thumb Code    18  game.o(.text.update_special_fruit_pos)
    uxListRemove                             0x00002095   Thumb Code    36  list.o(.text.uxListRemove)
    uxQueueMessagesWaiting                   0x000020b9   Thumb Code    38  queue.o(.text.uxQueueMessagesWaiting)
    vListInitialise                          0x000020e1   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x000020f9   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00002101   Thumb Code    58  list.o(.text.vListInsert)
    vListInsertEnd                           0x0000213d   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x0000216d   Thumb Code    70  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x000021b5   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x000021e5   Thumb Code   138  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00002271   Thumb Code   100  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x000022d5   Thumb Code   276  port.o(.text.vPortSuppressTicksAndSleep)
    vPortValidateInterruptPriority           0x000023e9   Thumb Code    98  port.o(.text.vPortValidateInterruptPriority)
    vProcessTask                             0x0000244d   Thumb Code   358  main.o(.text.vProcessTask)
    vQueueWaitForMessageRestricted           0x000025b5   Thumb Code    68  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x000025f9   Thumb Code    84  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x0000264d   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00002669   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00002679   Thumb Code    50  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x000026ad   Thumb Code   110  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x0000271d   Thumb Code   206  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskResume                              0x000027ed   Thumb Code   170  tasks.o(.text.vTaskResume)
    vTaskScreenPrint                         0x00002899   Thumb Code   444  main.o(.text.vTaskScreenPrint)
    vTaskStartScheduler                      0x00002aed   Thumb Code   148  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x00002b89   Thumb Code    54  tasks.o(.text.vTaskStepTick)
    vTaskSuspend                             0x00002bc1   Thumb Code   248  tasks.o(.text.vTaskSuspend)
    vTaskSuspendAll                          0x00002cb9   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00002cc9   Thumb Code   134  tasks.o(.text.vTaskSwitchContext)
    vTimerCallbackFunction                   0x00002d51   Thumb Code   128  main.o(.text.vTimerCallbackFunction)
    xPortStartScheduler                      0x00002dd1   Thumb Code   274  port.o(.text.xPortStartScheduler)
    xQueueCreateMutex                        0x00002ee5   Thumb Code    22  queue.o(.text.xQueueCreateMutex)
    xQueueGenericCreate                      0x00002efd   Thumb Code    82  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00002f51   Thumb Code   178  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00003005   Thumb Code   464  queue.o(.text.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x000031d5   Thumb Code   308  queue.o(.text.xQueueGenericSendFromISR)
    xQueueReceive                            0x00003309   Thumb Code   388  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x0000348d   Thumb Code   454  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x00003655   Thumb Code   166  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x000036fd   Thumb Code    96  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x0000375d   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00003785   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x00003791   Thumb Code   426  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x0000393d   Thumb Code   194  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x00003a01   Thumb Code   190  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00003ac1   Thumb Code   246  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00003bb9   Thumb Code   364  tasks.o(.text.xTaskResumeAll)
    xTimerCreate                             0x00003d25   Thumb Code    56  timers.o(.text.xTimerCreate)
    xTimerCreateTimerTask                    0x00003d5d   Thumb Code    88  timers.o(.text.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x00003dbd   Thumb Code   104  timers.o(.text.xTimerGenericCommand)
    xor_shift                                0x00003e25   Thumb Code    26  game.o(.text.xor_shift)
    __scatterload_copy                       0x00003e3f   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00003e4d   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00003e4f   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    uxTopUsedPriority                        0x00003f4c   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00003f50   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00003f70   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    currentDirection                         0x20000004   Data           1  game.o(.data.currentDirection)
    current_state                            0x20000008   Data           4  game.o(.data.current_state)
    max_time                                 0x2000000c   Data           1  main.o(.data.max_time)
    obstacle_count                           0x2000000d   Data           1  game.o(.data.obstacle_count)
    print_task_delay                         0x2000000e   Data           1  main.o(.data.print_task_delay)
    process_task_delay                       0x2000000f   Data           1  main.o(.data.process_task_delay)
    state_of_game                            0x20000010   Data           1  game.o(.data.state_of_game)
    target_score                             0x20000011   Data           1  game.o(.data.target_score)
    current_score                            0x20000019   Data           1  game.o(.bss.current_score)
    fruit_location                           0x2000001a   Data           2  game.o(.bss.fruit_location)
    highest_score                            0x2000001c   Data           1  game.o(.bss.highest_score)
    input_queue                              0x20000020   Data           4  main.o(.bss.input_queue)
    obstacles                                0x20000024   Data          20  game.o(.bss.obstacles)
    printTaskHandle                          0x20000038   Data           4  main.o(.bss.printTaskHandle)
    pxCurrentTCB                             0x20000040   Data           4  tasks.o(.bss.pxCurrentTCB)
    screen                                   0x200000bc   Data         420  game.o(.bss.screen)
    snake                                    0x20000260   Data         661  game.o(.bss.snake)
    special_power_up_location                0x200004f5   Data           2  game.o(.bss.special_power_up_location)
    timer                                    0x200004f8   Data           4  main.o(.bss.timer)
    timer_ticks                              0x200004fc   Data           4  main.o(.bss.timer_ticks)
    xMutex                                   0x20004588   Data           4  main.o(.bss.xMutex)
    __initial_sp                             0x200047f8   Data           0  startup_tm4c123.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000281

  Load Region LR_1 (Base: 0x00000000, Size: 0x00003f88, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00003f70, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          122    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000000   Code   RO          563  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x0000026c   0x0000026c   0x00000004   Code   RO          588    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x00000270   0x00000270   0x00000004   Code   RO          591    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000274   0x00000274   0x00000000   Code   RO          593    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000274   0x00000274   0x00000000   Code   RO          595    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000274   0x00000274   0x00000008   Code   RO          596    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x0000027c   0x0000027c   0x00000000   Code   RO          598    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x0000027c   0x0000027c   0x00000000   Code   RO          600    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x0000027c   0x0000027c   0x00000004   Code   RO          589    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x00000280   0x00000280   0x000000fc   Code   RO          123  * .text               startup_tm4c123.o
    0x0000037c   0x0000037c   0x00000024   Code   RO          566    .text               mc_w.l(memcpya.o)
    0x000003a0   0x000003a0   0x00000024   Code   RO          568    .text               mc_w.l(memseta.o)
    0x000003c4   0x000003c4   0x0000014e   Code   RO          574    .text               mf_w.l(dadd.o)
    0x00000512   0x00000512   0x000000e4   Code   RO          576    .text               mf_w.l(dmul.o)
    0x000005f6   0x000005f6   0x000000de   Code   RO          578    .text               mf_w.l(ddiv.o)
    0x000006d4   0x000006d4   0x0000001a   Code   RO          580    .text               mf_w.l(dfltui.o)
    0x000006ee   0x000006ee   0x0000003e   Code   RO          582    .text               mf_w.l(dfixi.o)
    0x0000072c   0x0000072c   0x00000026   Code   RO          584    .text               mf_w.l(f2d.o)
    0x00000752   0x00000752   0x00000038   Code   RO          586    .text               mf_w.l(d2f.o)
    0x0000078a   0x0000078a   0x0000001e   Code   RO          602    .text               mc_w.l(llshl.o)
    0x000007a8   0x000007a8   0x00000020   Code   RO          604    .text               mc_w.l(llushr.o)
    0x000007c8   0x000007c8   0x00000024   Code   RO          606    .text               mc_w.l(llsshr.o)
    0x000007ec   0x000007ec   0x00000000   Code   RO          608    .text               mc_w.l(iusefp.o)
    0x000007ec   0x000007ec   0x0000006e   Code   RO          609    .text               mf_w.l(fepilogue.o)
    0x0000085a   0x0000085a   0x000000ba   Code   RO          611    .text               mf_w.l(depilogue.o)
    0x00000914   0x00000914   0x00000024   Code   RO          613    .text               mc_w.l(init.o)
    0x00000938   0x00000938   0x00000008   PAD
    0x00000940   0x00000940   0x00000064   Code   RO          185    .text.PendSV_Handler  port.o
    0x000009a4   0x000009a4   0x0000000c   PAD
    0x000009b0   0x000009b0   0x00000024   Code   RO          169    .text.SVC_Handler   port.o
    0x000009d4   0x000009d4   0x0000002e   Code   RO          187    .text.SysTick_Handler  port.o
    0x00000a02   0x00000a02   0x00000002   PAD
    0x00000a04   0x00000a04   0x00000012   Code   RO          134    .text.SystemInit    system_tm4c123.o
    0x00000a16   0x00000a16   0x00000002   PAD
    0x00000a18   0x00000a18   0x0000003c   Code   RO           10    .text.UART0_Handler  main.o
    0x00000a54   0x00000a54   0x0000004e   Code   RO           77    .text.check_if_fruit_taken  game.o
    0x00000aa2   0x00000aa2   0x00000002   PAD
    0x00000aa4   0x00000aa4   0x00000050   Code   RO           79    .text.check_if_special_fruit_taken  game.o
    0x00000af4   0x00000af4   0x000000aa   Code   RO           75    .text.detect_collision  game.o
    0x00000b9e   0x00000b9e   0x00000002   PAD
    0x00000ba0   0x00000ba0   0x00000034   Code   RO           69    .text.draw_fruits   game.o
    0x00000bd4   0x00000bd4   0x00000046   Code   RO           65    .text.draw_obstacle  game.o
    0x00000c1a   0x00000c1a   0x00000002   PAD
    0x00000c1c   0x00000c1c   0x0000003c   Code   RO           71    .text.draw_screen   game.o
    0x00000c58   0x00000c58   0x00000042   Code   RO           67    .text.draw_snake    game.o
    0x00000c9a   0x00000c9a   0x00000002   PAD
    0x00000c9c   0x00000c9c   0x00000048   Code   RO          421    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x00000ce4   0x00000ce4   0x00000040   Code   RO           99    .text.init_game     game.o
    0x00000d24   0x00000d24   0x00000046   Code   RO           63    .text.initalize_screen  game.o
    0x00000d6a   0x00000d6a   0x00000002   PAD
    0x00000d6c   0x00000d6c   0x0000006e   Code   RO           47    .text.itoa          uart.o
    0x00000dda   0x00000dda   0x00000002   PAD
    0x00000ddc   0x00000ddc   0x000000c8   Code   RO            2    .text.main          main.o
    0x00000ea4   0x00000ea4   0x00000024   Code   RO           43    .text.print         uart.o
    0x00000ec8   0x00000ec8   0x0000001c   Code   RO           45    .text.print_idec    uart.o
    0x00000ee4   0x00000ee4   0x0000014c   Code   RO           73    .text.processInput  game.o
    0x00001030   0x00001030   0x000000c6   Code   RO          343    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x000010f6   0x000010f6   0x00000002   PAD
    0x000010f8   0x000010f8   0x000000ce   Code   RO          331    .text.prvAddNewTaskToReadyList  tasks.o
    0x000011c6   0x000011c6   0x00000002   PAD
    0x000011c8   0x000011c8   0x0000005a   Code   RO          497    .text.prvCheckForValidListAndQueue  timers.o
    0x00001222   0x00001222   0x00000002   PAD
    0x00001224   0x00001224   0x0000004e   Code   RO          461    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00001272   0x00001272   0x00000002   PAD
    0x00001274   0x00001274   0x00000026   Code   RO          277    .text.prvCopyDataFromQueue  queue.o
    0x0000129a   0x0000129a   0x00000002   PAD
    0x0000129c   0x0000129c   0x0000007a   Code   RO          263    .text.prvCopyDataToQueue  queue.o
    0x00001316   0x00001316   0x00000002   PAD
    0x00001318   0x00001318   0x00000012   Code   RO          337    .text.prvDeleteTCB  tasks.o
    0x0000132a   0x0000132a   0x00000002   PAD
    0x0000132c   0x0000132c   0x00000012   Code   RO          281    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x0000133e   0x0000133e   0x00000002   PAD
    0x00001340   0x00001340   0x00000044   Code   RO          463    .text.prvGetExpectedIdleTime  tasks.o
    0x00001384   0x00001384   0x00000020   Code   RO          533    .text.prvGetNextExpireTime  timers.o
    0x000013a4   0x000013a4   0x00000076   Code   RO          209    .text.prvHeapInit   heap_4.o
    0x0000141a   0x0000141a   0x00000002   PAD
    0x0000141c   0x0000141c   0x00000072   Code   RO          369    .text.prvIdleTask   tasks.o
    0x0000148e   0x0000148e   0x00000002   PAD
    0x00001490   0x00001490   0x00000020   Code   RO          247    .text.prvInitialiseMutex  queue.o
    0x000014b0   0x000014b0   0x00000024   Code   RO          243    .text.prvInitialiseNewQueue  queue.o
    0x000014d4   0x000014d4   0x000000aa   Code   RO          329    .text.prvInitialiseNewTask  tasks.o
    0x0000157e   0x0000157e   0x00000002   PAD
    0x00001580   0x00001580   0x00000052   Code   RO          503    .text.prvInitialiseNewTimer  timers.o
    0x000015d2   0x000015d2   0x00000002   PAD
    0x000015d4   0x000015d4   0x0000006e   Code   RO          459    .text.prvInitialiseTaskLists  tasks.o
    0x00001642   0x00001642   0x00000002   PAD
    0x00001644   0x00001644   0x0000005a   Code   RO          211    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x0000169e   0x0000169e   0x00000002   PAD
    0x000016a0   0x000016a0   0x00000040   Code   RO          547    .text.prvInsertTimerInActiveList  timers.o
    0x000016e0   0x000016e0   0x00000018   Code   RO          279    .text.prvIsQueueEmpty  queue.o
    0x000016f8   0x000016f8   0x0000001c   Code   RO          267    .text.prvIsQueueFull  queue.o
    0x00001714   0x00001714   0x0000008e   Code   RO          265    .text.prvNotifyQueueSetContainer  queue.o
    0x000017a2   0x000017a2   0x00000002   PAD
    0x000017a4   0x000017a4   0x00000028   Code   RO          177    .text.prvPortStartFirstTask  port.o
    0x000017cc   0x000017cc   0x0000003e   Code   RO          541    .text.prvProcessExpiredTimer  timers.o
    0x0000180a   0x0000180a   0x00000002   PAD
    0x0000180c   0x0000180c   0x00000112   Code   RO          537    .text.prvProcessReceivedCommands  timers.o
    0x0000191e   0x0000191e   0x00000002   PAD
    0x00001920   0x00001920   0x00000080   Code   RO          535    .text.prvProcessTimerOrBlockTask  timers.o
    0x000019a0   0x000019a0   0x0000003a   Code   RO          545    .text.prvReloadTimer  timers.o
    0x000019da   0x000019da   0x00000002   PAD
    0x000019dc   0x000019dc   0x00000026   Code   RO          335    .text.prvResetNextTaskUnblockTime  tasks.o
    0x00001a02   0x00001a02   0x00000002   PAD
    0x00001a04   0x00001a04   0x0000002a   Code   RO          539    .text.prvSampleTimeNow  timers.o
    0x00001a2e   0x00001a2e   0x00000002   PAD
    0x00001a30   0x00001a30   0x00000034   Code   RO          543    .text.prvSwitchTimerLists  timers.o
    0x00001a64   0x00001a64   0x00000032   Code   RO          167    .text.prvTaskExitError  port.o
    0x00001a96   0x00001a96   0x00000002   PAD
    0x00001a98   0x00001a98   0x00000032   Code   RO          363    .text.prvTaskIsTaskSuspended  tasks.o
    0x00001aca   0x00001aca   0x00000002   PAD
    0x00001acc   0x00001acc   0x00000016   Code   RO          499    .text.prvTimerTask  timers.o
    0x00001ae2   0x00001ae2   0x00000002   PAD
    0x00001ae4   0x00001ae4   0x00000086   Code   RO          269    .text.prvUnlockQueue  queue.o
    0x00001b6a   0x00001b6a   0x00000002   PAD
    0x00001b6c   0x00001b6c   0x0000014e   Code   RO          207    .text.pvPortMalloc  heap_4.o
    0x00001cba   0x00001cba   0x00000002   PAD
    0x00001cbc   0x00001cbc   0x00000018   Code   RO          443    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00001cd4   0x00001cd4   0x00000028   Code   RO          165    .text.pxPortInitialiseStack  port.o
    0x00001cfc   0x00001cfc   0x00000034   Code   RO           53    .text.reverse       uart.o
    0x00001d30   0x00001d30   0x00000040   Code   RO           85    .text.snake_took_fruit  game.o
    0x00001d70   0x00001d70   0x00000040   Code   RO           83    .text.snake_took_special_fruit  game.o
    0x00001db0   0x00001db0   0x00000134   Code   RO           39    .text.uart0_init    uart.o
    0x00001ee4   0x00001ee4   0x0000001a   Code   RO           41    .text.uart0_putchar  uart.o
    0x00001efe   0x00001efe   0x00000002   PAD
    0x00001f00   0x00001f00   0x00000034   Code   RO           93    .text.update_fruit_location  game.o
    0x00001f34   0x00001f34   0x00000060   Code   RO           97    .text.update_obstacle_pos  game.o
    0x00001f94   0x00001f94   0x0000004c   Code   RO           81    .text.update_snake_normal  game.o
    0x00001fe0   0x00001fe0   0x00000022   Code   RO           89    .text.update_snake_pos_fruit  game.o
    0x00002002   0x00002002   0x00000002   PAD
    0x00002004   0x00002004   0x0000007a   Code   RO           91    .text.update_snake_pos_special_fruit  game.o
    0x0000207e   0x0000207e   0x00000002   PAD
    0x00002080   0x00002080   0x00000012   Code   RO           87    .text.update_special_fruit_pos  game.o
    0x00002092   0x00002092   0x00000002   PAD
    0x00002094   0x00002094   0x00000024   Code   RO          155    .text.uxListRemove  list.o
    0x000020b8   0x000020b8   0x00000026   Code   RO          289    .text.uxQueueMessagesWaiting  queue.o
    0x000020de   0x000020de   0x00000002   PAD
    0x000020e0   0x000020e0   0x00000016   Code   RO          147    .text.vListInitialise  list.o
    0x000020f6   0x000020f6   0x00000002   PAD
    0x000020f8   0x000020f8   0x00000006   Code   RO          149    .text.vListInitialiseItem  list.o
    0x000020fe   0x000020fe   0x00000002   PAD
    0x00002100   0x00002100   0x0000003a   Code   RO          153    .text.vListInsert   list.o
    0x0000213a   0x0000213a   0x00000002   PAD
    0x0000213c   0x0000213c   0x0000001c   Code   RO          151    .text.vListInsertEnd  list.o
    0x00002158   0x00002158   0x00000014   Code   RO          175    .text.vPortEnableVFP  port.o
    0x0000216c   0x0000216c   0x00000046   Code   RO          181    .text.vPortEnterCritical  port.o
    0x000021b2   0x000021b2   0x00000002   PAD
    0x000021b4   0x000021b4   0x0000002e   Code   RO          183    .text.vPortExitCritical  port.o
    0x000021e2   0x000021e2   0x00000002   PAD
    0x000021e4   0x000021e4   0x0000008a   Code   RO          213    .text.vPortFree     heap_4.o
    0x0000226e   0x0000226e   0x00000002   PAD
    0x00002270   0x00002270   0x00000064   Code   RO          173    .text.vPortSetupTimerInterrupt  port.o
    0x000022d4   0x000022d4   0x00000114   Code   RO          189    .text.vPortSuppressTicksAndSleep  port.o
    0x000023e8   0x000023e8   0x00000062   Code   RO          191    .text.vPortValidateInterruptPriority  port.o
    0x0000244a   0x0000244a   0x00000002   PAD
    0x0000244c   0x0000244c   0x00000166   Code   RO            8    .text.vProcessTask  main.o
    0x000025b2   0x000025b2   0x00000002   PAD
    0x000025b4   0x000025b4   0x00000044   Code   RO          307    .text.vQueueWaitForMessageRestricted  queue.o
    0x000025f8   0x000025f8   0x00000054   Code   RO          347    .text.vTaskDelay    tasks.o
    0x0000264c   0x0000264c   0x0000001a   Code   RO          411    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00002666   0x00002666   0x00000002   PAD
    0x00002668   0x00002668   0x0000000e   Code   RO          415    .text.vTaskMissedYield  tasks.o
    0x00002676   0x00002676   0x00000002   PAD
    0x00002678   0x00002678   0x00000032   Code   RO          399    .text.vTaskPlaceOnEventList  tasks.o
    0x000026aa   0x000026aa   0x00000002   PAD
    0x000026ac   0x000026ac   0x0000006e   Code   RO          403    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x0000271a   0x0000271a   0x00000002   PAD
    0x0000271c   0x0000271c   0x000000ce   Code   RO          439    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x000027ea   0x000027ea   0x00000002   PAD
    0x000027ec   0x000027ec   0x000000aa   Code   RO          361    .text.vTaskResume   tasks.o
    0x00002896   0x00002896   0x00000002   PAD
    0x00002898   0x00002898   0x00000254   Code   RO            6    .text.vTaskScreenPrint  main.o
    0x00002aec   0x00002aec   0x0000009c   Code   RO          367    .text.vTaskStartScheduler  tasks.o
    0x00002b88   0x00002b88   0x00000036   Code   RO          393    .text.vTaskStepTick  tasks.o
    0x00002bbe   0x00002bbe   0x00000002   PAD
    0x00002bc0   0x00002bc0   0x000000f8   Code   RO          357    .text.vTaskSuspend  tasks.o
    0x00002cb8   0x00002cb8   0x00000010   Code   RO          341    .text.vTaskSuspendAll  tasks.o
    0x00002cc8   0x00002cc8   0x00000086   Code   RO          359    .text.vTaskSwitchContext  tasks.o
    0x00002d4e   0x00002d4e   0x00000002   PAD
    0x00002d50   0x00002d50   0x00000080   Code   RO            4    .text.vTimerCallbackFunction  main.o
    0x00002dd0   0x00002dd0   0x00000112   Code   RO          171    .text.xPortStartScheduler  port.o
    0x00002ee2   0x00002ee2   0x00000002   PAD
    0x00002ee4   0x00002ee4   0x00000016   Code   RO          245    .text.xQueueCreateMutex  queue.o
    0x00002efa   0x00002efa   0x00000002   PAD
    0x00002efc   0x00002efc   0x00000052   Code   RO          241    .text.xQueueGenericCreate  queue.o
    0x00002f4e   0x00002f4e   0x00000002   PAD
    0x00002f50   0x00002f50   0x000000b2   Code   RO          239    .text.xQueueGenericReset  queue.o
    0x00003002   0x00003002   0x00000002   PAD
    0x00003004   0x00003004   0x000001d0   Code   RO          255    .text.xQueueGenericSend  queue.o
    0x000031d4   0x000031d4   0x00000134   Code   RO          271    .text.xQueueGenericSendFromISR  queue.o
    0x00003308   0x00003308   0x00000184   Code   RO          275    .text.xQueueReceive  queue.o
    0x0000348c   0x0000348c   0x000001c6   Code   RO          259    .text.xQueueSemaphoreTake  queue.o
    0x00003652   0x00003652   0x00000002   PAD
    0x00003654   0x00003654   0x000000a6   Code   RO          413    .text.xTaskCheckForTimeOut  tasks.o
    0x000036fa   0x000036fa   0x00000002   PAD
    0x000036fc   0x000036fc   0x00000060   Code   RO          327    .text.xTaskCreate   tasks.o
    0x0000375c   0x0000375c   0x00000026   Code   RO          433    .text.xTaskGetSchedulerState  tasks.o
    0x00003782   0x00003782   0x00000002   PAD
    0x00003784   0x00003784   0x0000000c   Code   RO          375    .text.xTaskGetTickCount  tasks.o
    0x00003790   0x00003790   0x000001aa   Code   RO          373    .text.xTaskIncrementTick  tasks.o
    0x0000393a   0x0000393a   0x00000002   PAD
    0x0000393c   0x0000393c   0x000000c2   Code   RO          437    .text.xTaskPriorityDisinherit  tasks.o
    0x000039fe   0x000039fe   0x00000002   PAD
    0x00003a00   0x00003a00   0x000000be   Code   RO          435    .text.xTaskPriorityInherit  tasks.o
    0x00003abe   0x00003abe   0x00000002   PAD
    0x00003ac0   0x00003ac0   0x000000f6   Code   RO          405    .text.xTaskRemoveFromEventList  tasks.o
    0x00003bb6   0x00003bb6   0x00000002   PAD
    0x00003bb8   0x00003bb8   0x0000016c   Code   RO          345    .text.xTaskResumeAll  tasks.o
    0x00003d24   0x00003d24   0x00000038   Code   RO          501    .text.xTimerCreate  timers.o
    0x00003d5c   0x00003d5c   0x00000060   Code   RO          495    .text.xTimerCreateTimerTask  timers.o
    0x00003dbc   0x00003dbc   0x00000068   Code   RO          505    .text.xTimerGenericCommand  timers.o
    0x00003e24   0x00003e24   0x0000001a   Code   RO           95    .text.xor_shift     game.o
    0x00003e3e   0x00003e3e   0x0000000e   Code   RO          617    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00003e4c   0x00003e4c   0x00000002   Code   RO          618    i.__scatterload_null  mc_w.l(handlers.o)
    0x00003e4e   0x00003e4e   0x0000000e   Code   RO          619    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00003e5c   0x00003e5c   0x000000f0   Data   RO           28    .rodata.str1.1      main.o
    0x00003f4c   0x00003f4c   0x00000004   Data   RO          466    .rodata.uxTopUsedPriority  tasks.o
    0x00003f50   0x00003f50   0x00000020   Data   RO          616    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00003f70, Size: 0x00000018, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00003f70   0x00000004   Data   RW          136    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   0x00003f74   0x00000001   Data   RW          103    .data.currentDirection  game.o
    0x20000005   0x00003f75   0x00000003   PAD
    0x20000008   0x00003f78   0x00000004   Data   RW          101    .data.current_state  game.o
    0x2000000c   0x00003f7c   0x00000001   Data   RW           23    .data.max_time      main.o
    0x2000000d   0x00003f7d   0x00000001   Data   RW          102    .data.obstacle_count  game.o
    0x2000000e   0x00003f7e   0x00000001   Data   RW           22    .data.print_task_delay  main.o
    0x2000000f   0x00003f7f   0x00000001   Data   RW           21    .data.process_task_delay  main.o
    0x20000010   0x00003f80   0x00000001   Data   RW          106    .data.state_of_game  game.o
    0x20000011   0x00003f81   0x00000001   Data   RW          107    .data.target_score  game.o
    0x20000012   0x00003f82   0x00000002   PAD
    0x20000014   0x00003f84   0x00000004   Data   RW          195    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000018, Load base: 0x00003f88, Size: 0x000047e0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000018        -       0x00000001   Zero   RW           29    .bss.UART0_Handler.received_char  main.o
    0x20000019        -       0x00000001   Zero   RW          104    .bss.current_score  game.o
    0x2000001a        -       0x00000002   Zero   RW          111    .bss.fruit_location  game.o
    0x2000001c        -       0x00000001   Zero   RW          105    .bss.highest_score  game.o
    0x2000001d   0x00003f88   0x00000003   PAD
    0x20000020        -       0x00000004   Zero   RW           24    .bss.input_queue    main.o
    0x20000024        -       0x00000014   Zero   RW          109    .bss.obstacles      game.o
    0x20000038        -       0x00000004   Zero   RW           27    .bss.printTaskHandle  main.o
    0x2000003c        -       0x00000004   Zero   RW          553    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000040        -       0x00000004   Zero   RW          465    .bss.pxCurrentTCB   tasks.o
    0x20000044        -       0x00000004   Zero   RW          551    .bss.pxCurrentTimerList  timers.o
    0x20000048        -       0x00000004   Zero   RW          476    .bss.pxDelayedTaskList  tasks.o
    0x2000004c        -       0x00000004   Zero   RW          223    .bss.pxEnd          heap_4.o
    0x20000050        -       0x00000004   Zero   RW          477    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000054        -       0x00000004   Zero   RW          552    .bss.pxOverflowTimerList  timers.o
    0x20000058        -       0x00000064   Zero   RW          467    .bss.pxReadyTasksLists  tasks.o
    0x200000bc        -       0x000001a4   Zero   RW          108    .bss.screen         game.o
    0x20000260        -       0x00000295   Zero   RW          110    .bss.snake          game.o
    0x200004f5        -       0x00000002   Zero   RW          112    .bss.special_power_up_location  game.o
    0x200004f7   0x00003f88   0x00000001   PAD
    0x200004f8        -       0x00000004   Zero   RW           26    .bss.timer          main.o
    0x200004fc        -       0x00000004   Zero   RW           20    .bss.timer_ticks    main.o
    0x20000500        -       0x00004000   Zero   RW          230    .bss.ucHeap         heap_4.o
    0x20004500        -       0x00000001   Zero   RW          193    .bss.ucMaxSysCallPriority  port.o
    0x20004501   0x00003f88   0x00000003   PAD
    0x20004504        -       0x00000004   Zero   RW          194    .bss.ulMaxPRIGROUPValue  port.o
    0x20004508        -       0x00000001   Zero   RW          198    .bss.ulStoppedTimerCompensation  port.o
    0x20004509   0x00003f88   0x00000003   PAD
    0x2000450c        -       0x00000004   Zero   RW          197    .bss.ulTimerCountsForOneTick  port.o
    0x20004510        -       0x00000004   Zero   RW          472    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20004514        -       0x00000004   Zero   RW          471    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20004518        -       0x00000004   Zero   RW          474    .bss.uxSchedulerSuspended  tasks.o
    0x2000451c        -       0x00000004   Zero   RW          469    .bss.uxTaskNumber   tasks.o
    0x20004520        -       0x00000004   Zero   RW          468    .bss.uxTopReadyPriority  tasks.o
    0x20004524        -       0x00000014   Zero   RW          554    .bss.xActiveTimerList1  timers.o
    0x20004538        -       0x00000014   Zero   RW          555    .bss.xActiveTimerList2  timers.o
    0x2000454c        -       0x00000001   Zero   RW          224    .bss.xBlockAllocatedBit  heap_4.o
    0x2000454d   0x00003f88   0x00000003   PAD
    0x20004550        -       0x00000014   Zero   RW          485    .bss.xDelayedTaskList1  tasks.o
    0x20004564        -       0x00000014   Zero   RW          486    .bss.xDelayedTaskList2  tasks.o
    0x20004578        -       0x00000004   Zero   RW          225    .bss.xFreeBytesRemaining  heap_4.o
    0x2000457c        -       0x00000004   Zero   RW          481    .bss.xIdleTaskHandle  tasks.o
    0x20004580        -       0x00000004   Zero   RW          196    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x20004584        -       0x00000004   Zero   RW          227    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20004588        -       0x00000004   Zero   RW           25    .bss.xMutex         main.o
    0x2000458c        -       0x00000004   Zero   RW          482    .bss.xNextTaskUnblockTime  tasks.o
    0x20004590        -       0x00000004   Zero   RW          484    .bss.xNumOfOverflows  tasks.o
    0x20004594        -       0x00000004   Zero   RW          228    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20004598        -       0x00000004   Zero   RW          229    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x2000459c        -       0x00000004   Zero   RW          483    .bss.xPendedTicks   tasks.o
    0x200045a0        -       0x00000014   Zero   RW          480    .bss.xPendingReadyList  tasks.o
    0x200045b4        -       0x00000004   Zero   RW          473    .bss.xSchedulerRunning  tasks.o
    0x200045b8        -       0x00000008   Zero   RW          226    .bss.xStart         heap_4.o
    0x200045c0        -       0x00000014   Zero   RW          478    .bss.xSuspendedTaskList  tasks.o
    0x200045d4        -       0x00000014   Zero   RW          470    .bss.xTasksWaitingTermination  tasks.o
    0x200045e8        -       0x00000004   Zero   RW          475    .bss.xTickCount     tasks.o
    0x200045ec        -       0x00000004   Zero   RW          549    .bss.xTimerQueue    timers.o
    0x200045f0        -       0x00000004   Zero   RW          550    .bss.xTimerTaskHandle  timers.o
    0x200045f4        -       0x00000004   Zero   RW          479    .bss.xYieldPending  tasks.o
    0x200045f8        -       0x00000200   Zero   RW          120    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1594         74          0          8       1107       5974   game.o
       680          0          0          0      16413       4830   heap_4.o
       150          0          0          0          0       2329   list.o
      1342        254        240          3         21       3263   main.o
      1196         16          0          4         14       5012   port.o
      2576          0          0          0          0      22737   queue.o
       252         10        620          0        512       5452   startup_tm4c123.o
        18          0          0          4          0       6479   system_tm4c123.o
      4146          8          4          0        260      34325   tasks.o
      1162         18          0          0         60      12328   timers.o
       560         20          0          0          0       3361   uart.o

    ----------------------------------------------------------------------
     13818        412        896         24      18400     106090   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       142         12          0          5         13          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llsshr.o
        32          0          0          0          0         68   llushr.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
        56          0          0          0          0         88   d2f.o
       334          0          0          0          0        148   dadd.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
        62          0          0          0          0         80   dfixi.o
        26          0          0          0          0         76   dfltui.o
       228          0          0          0          0         96   dmul.o
        38          0          0          0          0         68   f2d.o
       110          0          0          0          0        168   fepilogue.o

    ----------------------------------------------------------------------
      1526         24          0          0          0       1448   Library Totals
         8          8          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       256         16          0          0          0        448   mc_w.l
      1262          0          0          0          0       1000   mf_w.l

    ----------------------------------------------------------------------
      1526         24          0          0          0       1448   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     15344        436        896         24      18400     106974   Grand Totals
     15344        436        896         24      18400     106974   ELF Image Totals
     15344        436        896         24          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                16240 (  15.86kB)
    Total RW  Size (RW Data + ZI Data)             18424 (  17.99kB)
    Total ROM Size (Code + RO Data + RW Data)      16264 (  15.88kB)

==============================================================================

